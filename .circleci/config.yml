version: 2.1
jobs:
  install:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/relayer-v2
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - cache-node-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          name: Save Yarn Package Cache
          key: cache-node-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  test:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/relayer-v2
    resource_class: medium+
    parallelism: 20
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - cache-node-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run build
          command: yarn build
      - run:
          name: Run tests
          command: |
            circleci tests glob "test/**/*.ts" | circleci tests split > /tmp/test-files
            yarn test --bail $(cat /tmp/test-files)
  lint:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/relayer-v2
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - cache-node-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run lint
          command: yarn lint
  no-leaked-logs:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Search for connection.url
          command: |
            if find . -type f -not -path "./node_modules/*" -not -path "./src/utils/NetworkUtils.ts" -exec grep -H "connection.url" {} +; then
              echo "Found 'connection.url'. Failing the test."
              exit 1
            else
              echo "'connection.url' not found."
              exit 0
            fi
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - install
      - test:
          requires:
            - install
      - lint:
          requires:
            - install
      - no-leaked-logs:
          requires:
            - install
